// Arquivo: /modulos/voluntario/js/mensagens.js
// Descri√ß√£o: M√≥dulo para a aba "Modelos de Mensagem".

export function init(db, user, userData) {
    const container = document.querySelector('#mensagens');
    if (!container) return;

    // --- FUN√á√ïES AUXILIARES ---
    const getGreeting = () => {
        const h = new Date().getHours();
        if (h >= 5 && h < 12) return 'Bom dia';
        if (h >= 12 && h < 18) return 'Boa tarde';
        return 'Boa noite';
    };
    const getFutureDate = (days) => {
        const d = new Date();
        d.setDate(d.getDate() + days);
        return `${String(d.getDate()).padStart(2, '0')}/${String(d.getMonth() + 1).padStart(2, '0')}`;
    };
    const formatDateTimeLocalString = (str) => {
        if (!str) return '';
        const d = new Date(str);
        const week = ["Domingo", "Segunda-feira", "Ter√ßa-feira", "Quarta-feira", "Quinta-feira", "Sexta-feira", "S√°bado"];
        return `${week[d.getDay()]}, ${d.toLocaleDateString('pt-BR')} √†s ${String(d.getHours()).padStart(2, '0')}h`;
    };
    const formatDateToDDMM = (str) => !str ? '' : `${str.split('-')[2]}/${str.split('-')[1]}`;
    const generateAndCopy = (el, msg) => {
        el.value = msg;
        el.select();
        navigator.clipboard.writeText(msg).then(() => alert('Mensagem copiada!'))
            .catch(() => alert('Falha ao copiar. Copie manualmente.'));
    };

    // --- INICIALIZA√á√ÉO DOS CAMPOS ---
    const meses = ['Janeiro', 'Fevereiro', 'Mar√ßo', 'Abril', 'Maio', 'Junho', 'Julho', 'Agosto', 'Setembro', 'Outubro', 'Novembro', 'Dezembro'];
    container.querySelector('#cobranca-mes').innerHTML = meses.map(m => `<option value="${m}">${m}</option>`).join('');
    
    let hoursOptions = '';
    for (let i = 8; i <= 21; i++) {
        const hour = String(i).padStart(2, '0') + ':00';
        hoursOptions += `<option value="${hour}">${hour}</option>`;
    }
    container.querySelector('#agendada-hora').innerHTML = hoursOptions;
    container.querySelector('#agendar-hora').innerHTML = hoursOptions.replace(/:00/g, 'h');

    // --- L√ìGICA DO ACCORDION ---
    const triggers = container.querySelectorAll('.accordion-trigger');
    triggers.forEach(trigger => {
        trigger.addEventListener('click', function () {
            const isActive = this.classList.contains('active');
            triggers.forEach(t => {
                t.classList.remove('active');
                const c = t.nextElementSibling;
                c.classList.remove('active');
                c.style.maxHeight = null;
            });
            if (!isActive) {
                this.classList.add('active');
                const content = this.nextElementSibling;
                content.classList.add('active');
                content.style.maxHeight = content.scrollHeight + 'px';
            }
        });
    });

    // --- EVENT LISTENERS DOS BOT√ïES ---
    container.querySelector('#btn-cobranca').addEventListener('click', function () {
        const p = container.querySelector('#cobranca-paciente').value, d = container.querySelector('#cobranca-data').value, m = container.querySelector('#cobranca-mes').value, v = container.querySelector('#cobranca-valor').value, px = container.querySelector('#cobranca-pix').value;
        const msg = `${getGreeting()}, ${p}!\n\nPassando para lembrar sobre a sua contribui√ß√£o mensal, com vencimento em *${formatDateToDDMM(d)}*.\n\n*Ao contribuir, voc√™ garante a continuidade do seu atendimento e apoia o trabalho da EuPsico.* üòä\n\n*M√™s de Refer√™ncia:* ${m}\n*Valor:* R$ ${v}\n*Chave PIX:* ${px}\n\nQualquer d√∫vida, estou √† disposi√ß√£o.`;
        generateAndCopy(container.querySelector('#output-cobranca'), msg);
    });
    container.querySelector('#btn-agendada').addEventListener('click', function () {
        const tipo = container.querySelector('#agendada-tipo').value, p = container.querySelector('#agendada-paciente').value, t = container.querySelector('#agendada-terapeuta').value, prof = container.querySelector('#agendada-profissao').value, dia = container.querySelector('#agendada-diasemana').value, data = container.querySelector('#agendada-data').value, hora = container.querySelector('#agendada-hora').value;
        let intro = tipo === 'plantao' ? `Meu nome √© ${t} e sou o/a ${prof} da EuPsico que ir√° realizar seu atendimento no Plant√£o Psicol√≥gico.` : `Meu nome √© ${t} e sou o/a ${prof} da EuPsico que ir√° realizar seu atendimento.`;
        let msg = tipo === 'plantao' ? `${getGreeting()}, ${p}!\n\n${intro}\n\nEscrevo para confirmar nossa primeira sess√£o:\n‚ú® *${dia}, ${formatDateToDDMM(data)} √†s ${hora}* ‚ú®\n\nPara que voc√™ se sinta mais confort√°vel para o nosso encontro, gostaria de explicar como funciona este acolhimento inicial. O Plant√£o Psicol√≥gico √© um *atendimento breve e focado* (de at√© quatro sess√µes), onde nosso objetivo ser√°:\n\n‚û°Ô∏è *Identificar sua demanda principal:* Compreender as quest√µes que levaram voc√™ a buscar ajuda neste momento.\n‚û°Ô∏è *Avaliar sua necessidade:* Analisar a urg√™ncia e a natureza da sua queixa.\n‚û°Ô∏è *Realizar o encaminhamento adequado:* Direcionar voc√™ para a modalidade de terapia mais indicada ao final do nosso processo.\n\nDois pontos importantes sobre este formato:\n1. O Plant√£o funciona como uma porta de entrada. Ele *n√£o √© um processo psicoterap√™utico completo*, mas sim o primeiro passo para o cuidado cont√≠nuo.\n2. Como profissional do Plant√£o, meu papel √© te acolher e direcionar da melhor forma. Por isso, a terapia cont√≠nua, se for o caso, ser√° realizada por *outro colega*, garantindo um encaminhamento isento e focado no que √© melhor para voc√™.\n\nSou ${prof} com registro profissional, e nosso atendimento √© totalmente protegido pelo sigilo e pela √©tica profissional.\n\nSe tiver qualquer d√∫vida antes da nossa sess√£o, pode me perguntar. Estou √† disposi√ß√£o para te acolher nesta jornada.` : `${getGreeting()}, ${p}!\n\n${intro}\n\nEscrevo para confirmar nossa primeira sess√£o:\n‚ú® *${dia}, ${formatDateToDDMM(data)} √†s ${hora}* ‚ú®\n\nCaso precise remarcar, por favor, me avise com no m√≠nimo 24 horas de anteced√™ncia.\n\nAt√© l√°!`;
        generateAndCopy(container.querySelector('#output-agendada'), msg);
    });
    container.querySelector('#btn-agendar').addEventListener('click', function () {
        const p = container.querySelector('#agendar-paciente').value, t = container.querySelector('#agendar-terapeuta').value, prof = container.querySelector('#agendar-profissao').value, mod = container.querySelector('#agendar-modalidade').value, dia = container.querySelector('#agendar-diasemana').value, hora = container.querySelector('#agendar-hora').value;
        const msg = `${getGreeting()}, ${p}!\n\nSou ${t}, ${prof} na EuPsico.\n\nTenho uma vaga dispon√≠vel para voc√™ no seguinte hor√°rio:\n*- Modalidade:* ${mod}\n*- Dia e Hora:* ${dia}, √†s ${hora}.\n\nEste hor√°rio funciona para voc√™?\n\nAguardo sua confirma√ß√£o para darmos os pr√≥ximos passos. üòâ`;
        generateAndCopy(container.querySelector('#output-agendar'), msg);
    });
    container.querySelector('#btn-primeira').addEventListener('click', function () {
        const p = container.querySelector('#primeira-paciente').value, data = container.querySelector('#primeira-data-agendamento').value, v = container.querySelector('#primeira-valor').value, px = container.querySelector('#primeira-pix').value;
        const msg = `Ol√°, ${p}! Que bom que o hor√°rio funcionou para voc√™.\n\nPara confirmarmos e garantirmos sua vaga, o pr√≥ximo passo √© realizar o pagamento da primeira contribui√ß√£o.\n\n*Agendamento:* ${formatDateTimeLocalString(data)}\n*Valor:* R$ ${v}\n*Chave PIX:* ${px}\n\n*Prazo para envio do comprovante:* ${getFutureDate(2)}\n\nSeu hor√°rio ser√° confirmado assim que recebermos o comprovante. Qualquer d√∫vida, √© s√≥ chamar!`;
        generateAndCopy(container.querySelector('#output-primeira'), msg);
    });
}